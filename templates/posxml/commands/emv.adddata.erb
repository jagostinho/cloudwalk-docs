<% content_for :docs_description do %>
  <meta name="docs:description" content="<%= I18n.t('posxml.commands.emv_adddata.description') %>">
<% end %>

<h1><%= I18n.t("posxml.commands.title") %> <em>emv.adddata</em></h1>

<p class="more-info"><%= I18n.t("general.updated_at", :date => "16/09/2013") %></p>

<p class="note"><%= I18n.t("posxml.commands.emv_adddata.paragraph_1") %></p>

<p><%= I18n.t("posxml.commands.emv_adddata.paragraph_2") %></p>

<h2><%= I18n.t("posxml.commands.parameters") %></h2>

<ol class="parameters">
  <li><%= I18n.t("posxml.commands.emv_adddata.parameters.parameter_1") %></li>
  <li><%= I18n.t("posxml.commands.emv_adddata.parameters.parameter_2") %></li>
  <li><%= I18n.t("posxml.commands.emv_adddata.parameters.parameter_3") %></li>
  <li><%= I18n.t("posxml.commands.emv_adddata.parameters.parameter_4") %></li>
</ol>

<h2 id="table-of-parameters"><%= I18n.t("posxml.commands.emv_adddata.paragraph_3") %></h2>

<p><%= I18n.t("posxml.commands.emv_adddata.paragraph_8") %></p>

<table cellpadding="0" cellspacing="0" border="0" class="table table-bordered table-hover">
	<thead>
    <tr>
      <th><%= I18n.t("posxml.commands.emv_adddata.paragraph_4") %></th>
      <th><%= I18n.t("posxml.commands.emv_adddata.paragraph_5") %></th>
      <th><%= I18n.t("posxml.commands.emv_adddata.paragraph_6") %></th>
      <th><%= I18n.t("posxml.commands.emv_adddata.paragraph_7") %></th>
    </tr>
	</thead>
  <tbody>
		<tr>
			<td>bAcquirerID</td>
      <td>Identificador da Rede Adquirente</td>
      <td>x</td>
			<td></td>
		</tr>
		<tr>
			<td>bReqApplication</td>
			<td>“99” - Todas as aplicaçãoes, “0” - Apenas aplicações selecionadas em waAppArray</td>
			<td>x</td>
			<td></td>
		</tr>
		<tr>
			<td>baInitialValue</td>
			<td>Valor inicial(Amount authorized). 12 caracteres com padding de 0 a esquerda, exemplo: “000000005000”(50,00)</td>
			<td>x</td>
			<td></td>
		</tr>
		<tr>
			<td>baDate</td>
			<td>Data da Transação(“AAMMDD”)</td>
			<td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>baTime</td>
			<td>Hora da transação(“HHMMSS”)</td>
			<td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>baTimeStamp</td>
			<td>Selo de tempo para as tabelas(“DDMMAAAASS”), onde SS é um número sequencial qualquer. O Kernel EMV do Telium válida o timestamp.</td>
			<td>x</td>
			<td></td>
		</tr>
		<tr>
			<td>iAppCount</td>
			<td>Quantidade de entradas da lista waAppArray</td>
			<td>x</td>
			<td></td>
		</tr>
		<tr>
			<td>waAppArrayX</td>
			<td>Array contendo identificador da rede adquirente + índice para tabela de parâmetros EMV. Aonde X é o número sequencial da aplicação, começando a partir do 1. Exemplo waAppArray1, waAppArray2...</td>
			<td>x</td>
			<td></td>
		</tr>
  </tbody>
</table>

<p><%= I18n.t("posxml.commands.emv_adddata.paragraph_9") %></p>

<table cellpadding="0" cellspacing="0" border="0" class="table table-bordered table-hover">
	<thead>
    <tr>
      <th><%= I18n.t("posxml.commands.emv_adddata.paragraph_4") %></th>
      <th><%= I18n.t("posxml.commands.emv_adddata.paragraph_5") %></th>
      <th><%= I18n.t("posxml.commands.emv_adddata.paragraph_6") %></th>
      <th><%= I18n.t("posxml.commands.emv_adddata.paragraph_7") %></th>
    </tr>
	</thead>
  <tbody>
		<tr>
			<td>baAmount</td>
      <td>Valor da transação (Amount, authorized), podendo incluir novos valores apresentados após a instrução emv.inittransaction. 12 caracteres com padding de 0 a esquerdo, exemplo: “000000005000”(50,00).</td>
      <td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>baAmountOther</td>
			<td>Valor de saque ou troco - cashback (Amount, other). 12 caracteres com padding de 0 a esquerdo, exemplo: “000000005000”(50,00).</td>
			<td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>bfRefund</td>
			<td>Anulação da transação anterior “1” - sim “0” - não</td>
			<td></td>
			<td>x</td>
		</tr>
		<tr>
			<td>bBlackList</td>
			<td>Resultado da consulta à lista negativa (EMV), 0 - PAN não consta na lista negra, 1 - PAN consta na lista negra.</td>
			<td>x</td>
			<td></td>
		</tr>
		<tr>
			<td>bMustConnect</td>
			<td>Obrigatoriedade de conexão, 0 - Transação pode ser efetuada offline, 1 - Transação somente pode ser efetuada online.</td>
			<td></td>
			<td></td>
		</tr>
		<tr>
			<td>bRequirePIN</td>
			<td>Entrada de PIN, 0 - Não obrigatória, 1 - Obrigatória.</td>
			<td>x</td>
			<td></td>
		</tr>
		<tr>
			<td>bKeyMode</td>
			<td>Modo de criptografia para captura de PIN online: 2 - DUKPT DES(8 bytes), 3 - DUKPT 3DES(18 bytes)</td>
			<td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>bManageRisk</td>
			<td>Gerenciamento de risco EMV (Risk Management), 0 - Não faz o gerenciamento de risco, 1 - Faz o gerenciamento de risco.</td>
			<td>x</td>
			<td></td>
		</tr>
		<tr>
			<td>dwFloorLimit</td>
			<td>Terminal Floor Limit (em centavos).</td>
			<td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>dwThresholdValue</td>
			<td>Threshold Value for Biased Transaction Selection (em centavos).</td>
			<td>x</td>
			<td></td>
		</tr>
		<tr>
			<td>bMaximumTarget</td>
			<td>Maximum Target Percentage to be used for Biased Transaction Selection.</td>
			<td>x</td>
			<td></td>
		</tr>
		<tr>
			<td>bMandatoryTagsLen</td>
			<td>Tamanho do campo baMandatoryTags.</td>
			<td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>baMandatoryTags</td>
			<td>Lista de tags necessárias para a montagem do campo 55 da mensagem ISO-8583. (Hex)</td>
			<td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>bOptionalTagsLen</td>
			<td>Tamanho do campo baOptionalTags.</td>
			<td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>baOptionalTags</td>
			<td>Lista de tags desejáveis a serem recuperadas na operação. (Hex)</td>
			<td>x</td>
			<td>x</td>
		</tr>
  </tbody>
</table>

<p><%= I18n.t("posxml.commands.emv_adddata.paragraph_10") %></p>

<table cellpadding="0" cellspacing="0" border="0" class="table table-bordered table-hover">
	<thead>
    <tr>
      <th><%= I18n.t("posxml.commands.emv_adddata.paragraph_4") %></th>
      <th><%= I18n.t("posxml.commands.emv_adddata.paragraph_5") %></th>
      <th><%= I18n.t("posxml.commands.emv_adddata.paragraph_6") %></th>
      <th><%= I18n.t("posxml.commands.emv_adddata.paragraph_7") %></th>
    </tr>
	</thead>
  <tbody>
		<tr>
			<td>bCommStatus</td>
      <td>Status da comunicação com o Host. 0 - Comunicação bem sucedida, 1 – Falha na comunicação com o host.</td>
      <td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>bIssuerType</td>
			<td>Tipo de Emissor: 0 - EMV “Full-Grade”, 1 - EMV “Partial-Grade”.</td>
			<td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>baInitialValue</td>
			<td>Authorization Response Code (em ASCII). O padrão define:<br/>
			"00" - Approved<br/>
			"01" - Denied<br/>
			"Y1" - Offline approved<br/>
			"Y3" - Offline declined<br/>
			"Z1" - Unable to go online, offline approved<br/>
			"Z3" - Unable to go online, offline declined<br/></td>
			<td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>iTLVDataEMVLen</td>
			<td>Tamanho do campo baTLVDataEMV.</td>
			<td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>baTLVDataEMV</td>
			<td>Lista de tags retornadas pelo emissor. (Hex)</td>
			<td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>bMandatoryTagsLen</td>
			<td>Tamanho do campo baMandatoryTags.</td>
			<td>x</td>
			<td>x</td>
		</tr>
		<tr>
			<td>baMandatoryTags</td>
			<td>Lista de tags mandatórias a serem recuperadas na operação. (Hex)</td>
			<td>x</td>
			<td>x</td>
		</tr>
  </tbody>
</table>

<h2><%= I18n.t("posxml.commands.example") %></h2>

<pre><code data-language="html">&lt;stringvariable value="" variable="sReturn" /&gt;
&lt;integervariable value="" variable="iReturn" /&gt;

&lt;emv.cleanstructures/&gt;

&lt;!-- adicionando dados para tipo init, &lt;emv.inittransaction/&gt; -- &gt;
&lt;emv.adddata type="init" parameter="bAcquirerID" value="4" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="init" parameter="bReqApplication" value="99" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="init" parameter="baDate" value="20130916" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="init" parameter="baTime" value="160010" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="init" parameter="baTimeStamp" value="1609201310" variablereturn="$(iReturn)"/&gt;

&lt;!-- inicia a transacao -- &gt;
&lt;emv.inittransaction variablereturn="$(iReturn)"/&gt;

&lt;!-- se o cartao passado for um cartao com chip, continua o processamento, passando agora parametros com o tipo process &lt;emv.processtransaction/&gt;-- &gt;
&lt;emv.adddata type="process" parameter="baAmount" value="000000005000" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="process" parameter="bMustConnect" value="01" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="process" parameter="bRequirePIN" value="01" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="process" parameter="bKeyMode" value="03" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="process" parameter="bManageRisk" value="01" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="process" parameter="baMandatoryTags" value="845A5F349F039F269F279F109F379F36959A9C9F025F2A829F1A" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="process" parameter="bMandatoryTagsLen" value="52" variablereturn="$(iReturn)"/&gt;

&lt;!-- continua o processamento do cartão com chip -- &gt;
&lt;emv.processtransaction ctls="0" variablereturn="$(iReturn)"/&gt;

&lt;emv.adddata type="finish" parameter="bCommStatus" value="0" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="finish" parameter="bIssuerType" value="00" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="finish" parameter="baAuthRespCode" value="00" variablereturn="$(iReturn)"/&gt;

&lt;!-- tamanho da resposta do TLV do autorizador EMV -- &gt;
&lt;emv.adddata type="finish" parameter="iTLVDataEMVLen" value="110" variablereturn="$(iReturn)"/&gt;

&lt;!-- no caso aqui, devemos passar a resposta do TLV do autorizador EMV -- &gt;
&lt;emv.adddata type="finish" parameter="baTLVDataEMV" value="$(sTLVResposta)" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="finish" parameter="bMandatoryTagsLen" value="0" variablereturn="$(iReturn)"/&gt;
&lt;emv.adddata type="finish" parameter="baMandatoryTags" value="0" variablereturn="$(iReturn)"/&gt;

&lt;emv.finishtransaction variablereturn="$(iReturn)"/&gt;

&lt;emv.removecard variablereturn="$(iReturn)"/&gt;

</code></pre>
<hr/>

<p><%= I18n.t("posxml.commands.emv_adddata.paragraph_11") %></p>
<p><%= I18n.t("posxml.commands.emv_adddata.paragraph_12") %></p>

<h2><%= I18n.t("posxml.commands.comments") %></h2>

<%= mootit %>
